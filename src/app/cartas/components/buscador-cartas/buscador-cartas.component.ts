import { Component, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';
import { FormBuilder, FormGroup, FormArray, FormControl, Validators } from '@angular/forms';
import { TypeCode } from '../../interfaces/carta.interface';

@Component({
  selector: 'app-buscador-cartas',
  templateUrl: './buscador-cartas.component.html',
  styleUrls: ['./buscador-cartas.component.css']
})
export class BuscadorCartasComponent implements OnInit {

  @Output() onSubmit   : EventEmitter<FormGroup> = new EventEmitter();

  formBu: FormGroup;
  spheres: Array<any> = [
    { name: 'Tactics', value: 'tactics' },
    { name: 'Spirit', value: 'spirit' },
    { name: 'Leadership', value: 'leadership' },
    { name: 'Lore', value: 'lore' },
    { name: 'Neutral', value: 'neutral' },
    { name: 'Baggins', value: 'baggins' },
    { name: 'Fellowship', value: 'fellowship' }
  ];

  operators: Array<any> = [
    {name: '=', value: '=='},
    {name: '<', value: '>'},
    {name: '>', value: '>'}
  ];

  yes_no: Array<any> = [
    {name: 'Cualquiera', value: ''},
    {name: 'Sí', value: 'true'},
    {name: 'No', value: 'false'}
  ];

  type_codes: Array<any> = [
    {  name: 'Cualquiera', value: ''},
    {  name: 'Aliado', value: 'ally'},
    {  name: 'Vinculada', value: 'attachment'},
    {  name: 'Contrato', value: 'contract'},
    {  name: 'Evento', value: 'event'},
    {  name: 'Héroe', value: 'hero'},
    {  name: 'Misión de jugador', value: 'player-side-quest'},
    {  name: 'Tesoro', value: 'treasure'}
  ];

  traits: Array<any> = [
    {  name: 'Cualquiera', value: ''},
    {  name: 'Águila', value: 'Águila'},
    {  name: 'Anillo', value: 'Anillo'},
    {  name: 'Arma', value: 'Arma'},
    {  name: 'Armadura', value: 'Armadura'},
    {  name: 'Arquero', value: 'Arquero'},
    {  name: 'Artefacto', value: 'Artefacto'},
    {  name: 'Artesano', value: 'Artesano'},
    {  name: 'Ayuda', value: 'Ayuda'},
    {  name: 'Beórnida', value: 'Beórnida'},
    {  name: 'Bree', value: 'Bree'},
    {  name: 'Canción', value: 'Canción'},
    {  name: 'Comunidad', value: 'Comunidad'},
    {  name: 'Corsario', value: 'Corsario'},
    {  name: 'Criatura', value: 'Criatura'},
    {  name: 'Curandero', value: 'Curandero'},
    {  name: 'Dueño', value: 'Dueño'},
    {  name: 'Dúnedain', value: 'Dúnedain'},
    {  name: 'Enano', value: 'Enano'},
    {  name: 'Ent', value: 'Ent'},
    {  name: 'Erebor', value: 'Erebor'},
    {  name: 'Esgaroth', value: 'Esgaroth'},
    {  name: 'Estado', value: 'Estado'},
    {  name: 'Explorador', value: 'Explorador'},
    {  name: 'Gondor', value: 'Gondor'},
    {  name: 'Guerrero', value: 'Guerrero'},
    {  name: 'Habilidad', value: 'Habilidad'},
    {  name: 'Harad', value: 'Harad'},
    {  name: 'Hechizo', value: 'Hechizo'},
    {  name: 'Hierba para pipa', value: 'Hierba para pipa'},
    {  name: 'Hobbit', value: 'Hobbit'},
    {  name: 'Instrumento', value: 'Instrumento'},
    {  name: 'Isengard', value: 'Isengard'},
    {  name: 'Istari', value: 'Istari'},
    {  name: 'Leñador', value: 'Leñador'},
    {  name: 'Mathom', value: 'Mathom'},
    {  name: 'Mearas', value: 'Mearas'},
    {  name: 'Montaraz', value: 'Montaraz'},
    {  name: 'Montura', value: 'Montura'},
    {  name: 'Noble', value: 'Noble'},
    {  name: 'Noldor', value: 'Noldor'},
    {  name: 'Objeto', value: 'Objeto'},
    {  name: 'Oficial de la Comarca', value: 'Oficial de la Comarca'},
    {  name: 'Pipa', value: 'Pipa'},
    {  name: 'Poney', value: 'Poney'},
    {  name: 'Portador del Anillo', value: 'Portador del Anillo'},
    {  name: 'Registro', value: 'Registro'},
    {  name: 'Rohan', value: 'Rohan'},
    {  name: 'Saqueador', value: 'Saqueador'},
    {  name: 'Señal', value: 'Señal'},
    {  name: 'Senescal', value: 'Senescal'},
    {  name: 'Silvano', value: 'Silvano'},
    {  name: 'Tierras Lejanas', value: 'Tierras Lejanas'},
    {  name: 'Título', value: 'Título'},
    {  name: 'Trampa', value: 'Trampa'},
    {  name: 'Trovador', value: 'Trovador'},
    {  name: 'Valle', value: 'Valle'},
    {  name: 'Vara', value: 'Vara'},
    {  name: 'Wose', value: 'Wose'}
  ];

  cycles: Array<any> = [
    {  name: 'Cualquiera', value: ''},
    {  name: 'Caja Básica', value: 'Core'},
    //{  name: 'Caja Básica Revisada (sólo campaña)', value: 'RevCore'},
    {  name: 'Sombras del Bosque Negro', value: 'SoM'},
    {  name: 'Khazad-dûm', value: 'KD'},
    {  name: 'La Mina del Enano', value: 'DD'},
    {  name: 'Herederos de Númenor', value: 'HoN'},
    {  name: 'Contra la Sombra', value: 'AtS'},
    {  name: 'La Voz de Isengard', value: 'VoI'},
    {  name: 'El Creador del Anillo', value: 'TRM'},
    {  name: 'El Reino Perdido', value: 'TLR'},
    {  name: 'Angmar Despertado', value: 'AA'},
    {  name: 'Angmar Despertado (sólo campaña)', value: 'AACE'},
    {  name: 'Los Puertos Grises', value: 'TGH'},
    {  name: 'Cazador de Sueños', value: 'DC'},
    {  name: 'Las Arenas de Harad', value: 'TSoH'},
    {  name: 'Los Haradrim', value: 'H'},
    {  name: 'Las tierras salvajes de Rhovanion', value: 'TWoR'},
    {  name: 'Ered Mithrin', value: 'EM'},
    {  name: 'Una Sombra en el Este', value: 'ASitE'},
    {  name: 'La Venganza de Mordor', value: 'TVoM'},
    {  name: 'ALeP - Descendientes de Eorl', value: 'CoE'},
    {  name: 'ALeP - Juramento de los Rohirrim', value: 'OotR'},
    {  name: 'El Hobbit', value: 'TH'},
    {  name: 'El Señor de los Anillos', value: 'LotR'},
    {  name: 'PoDs', value: 'PoD'}
    //{  name: 'Mazos de inicio', value: 'StarterDecks'}
  ];

  pack_code: Array<any> = [
    {  name: 'Cualquiera', value: ''},
    {  name: 'Caja Básica', value: 'Core'},
    {  name: 'Caja Básica Revisada (sólo campaña)', value: 'RevCore'},
    {  name: 'Las Penumbras del Bosque Negro', value: 'TDoM'},
    {  name: 'Enanos de Durin', value: 'DoD'},
    {  name: 'Elfos de Lorien', value: 'EoL'},
    {  name: 'Defensores de Gondor', value: 'DoG'},
    {  name: 'Jinetes de Rohan', value: 'RoR'},
    {  name: 'La Caza de Gollum', value: 'HfG'},
    {  name: 'Conflicto en la Carroca', value: 'CatC'},
    {  name: 'Viaje a Rhosgobel', value: 'JtR'},
    {  name: 'Las Colinas de Emyn Muil', value: 'HoEM'},
    {  name: 'Las Ciénagas de los Muertos', value: 'TDM'},
    {  name: 'Regreso al Bosque Negro', value: 'RtM'},
    {  name: 'Khazad-dûm', value: 'KD'},
    {  name: 'La Puerta del Cuerno Rojo', value: 'TRG'},
    {  name: 'Camino a Rivendel', value: 'RtR'},
    {  name: 'El Guardián del Agua', value: 'WitW'},
    {  name: 'La Larga Oscuridad', value: 'TLD'},
    {  name: 'Cimientos de Piedra', value: 'FoS'},
    {  name: 'Sombra y Llama', value: 'SaF'},
    {  name: 'Herederos de Númenor', value: 'HoN'},
    {  name: 'El Temor del Senescal', value: 'TSF'},
    {  name: 'El Bosque de Drúadan', value: 'TDF'},
    {  name: 'Encuentro en Amon Dîn', value: 'EaAD'},
    {  name: 'Asalto a Osgiliath', value: 'AoO'},
    {  name: 'La Sangre de Gondor', value: 'BoG'},
    {  name: 'El Valle de Morgul', value: 'TMV'},
    {  name: 'La Voz de Isengard', value: 'VoI'},
    {  name: 'La Trampa de las Tierras Brunas', value: 'TDT'},
    {  name: 'Las Tres Pruebas', value: 'TTT'},
    {  name: 'Problemas en Tharbad', value: 'TiT'},
    {  name: 'Nîn-in-Eilph', value: 'NiE'},
    {  name: 'El Secreto de Celebrimbor', value: 'CS'},
    {  name: 'La Corona Astada', value: 'TAC'},
    {  name: 'El Reino Perdido', value: 'TLR'},
    {  name: 'Los Páramos de Eriador', value: 'WoE'},
    {  name: 'Huida del Monte Gram', value: 'EfMG'},
    {  name: 'A través de las Landas de Etten', value: 'AtE'},
    {  name: 'La Traición de Rhudaur', value: 'ToR'},
    {  name: 'La Batalla de Carn Dûm', value: 'BoCD'},
    {  name: 'El Reino del Terror', value: 'TDR'},
    {  name: 'Angmar Despertado (sólo campaña)', value: 'AACE'},
    {  name: 'Los Puertos Grises', value: 'TGH'},
    {  name: 'La Huída del Tormentera', value: 'FotS'},
    {  name: 'La cosa de las profundidades', value: 'TitD'},
    {  name: 'El Templo de los Engañados', value: 'TotD'},
    {  name: 'Las ruinas anegadas', value: 'DR'},
    {  name: 'Tormenta en la Bahía Cobas', value: 'SoCH'},
    {  name: 'La ciudad de los corsarios', value: 'CoC'},
    {  name: 'Las Arenas de Harad', value: 'TSoH'},
    {  name: 'Los mûmakil', value: 'M'},
    {  name: 'Carrera por Harad', value: 'RAH'},
    {  name: 'Bajo las arenas', value: 'BtS'},
    {  name: 'La Serpiente Negra', value: 'TBS'},
    {  name: 'Las mazmorras de Cirith Gurat', value: 'DoCG'},
    {  name: 'Los Cruces del Poros', value: 'CoP'},
    {  name: 'Las tierras salvajes de Rhovanion', value: 'TWoR'},
    {  name: 'El Brezal Marchito', value: 'TWH'},
    {  name: 'Recorrido por Rhovanion', value: 'RAR'},
    {  name: 'Fuego en la Noche', value: 'FitN'},
    {  name: 'El Fantasma de Framsburgo', value: 'TGoF'},
    {  name: 'Monte Gundabad', value: 'MG'},
    {  name: 'El destino de las tierras asperas', value: 'TFoW'},
    {  name: 'Una Sombra en el Este', value: 'ASitE'},
    {  name: 'Ira y Perdición', value: 'WaR'},
    {  name: 'La ciudad de Ulfast', value: 'TCoU'},
    {  name: 'El desafío de los Aurigas', value: 'CotW'},
    {  name: 'Bajo las Montañas de Ceniza', value: 'UtAM'},
    {  name: 'La tierra del pesar', value: 'TLoS'},
    {  name: 'La fortaleza de Nurn', value: 'TFoN'},
    {  name: 'Sobre la colina y bajo la colina', value: 'OHaUH'},
    {  name: 'En el umbral', value: 'OtD'},
    {  name: 'Los Jinetes Negros', value: 'TBR'},
    {  name: 'El camino se oscurece', value: 'TRD'},
    {  name: 'La Traición de Saruman', value: 'ToS'},
    {  name: 'La Tierra de la Sombra', value: 'LoS'},
    {  name: 'La Llama del Oeste', value: 'FotW'},
    {  name: 'La Montaña de Fuego', value: 'MoF'},
    {  name: 'ALeP - Descendientes de Eorl', value: 'CoE'},
    {  name: 'ALeP - Conspiración de Aldburg', value: 'TAP'},
    {  name: 'ALeP - El Saneamiento de la Comarca', value: 'TSotS'},
    {  name: 'ALeP - Fuego en el Estemnet', value: 'FotE'},
    {  name: 'ALeP - El Paso de Rohan', value: 'TGoR'},
    {  name: 'ALeP - The Glittering Caves', value: 'TGC'},
    {  name: 'ALeP - Mustering of the Rohirrim', value: 'MotR'},
    {  name: 'ALeP - Blood in the Isen', value: 'BitI'},
    {  name: 'ALeP - The Nine are Abroad', value: 'TNaN'}
  ];

  illustrators: Array<any> = [
    {  name: 'Cualquiera', value: ''},
    {  name: 'A. M. Sartor', value: 'A. M. Sartor'},
    {  name: 'Aaron B. Miller', value: 'Aaron B. Miller'},
    {  name: 'Adam Lane', value: 'Adam Lane'},
    {  name: 'Adam Schumpert', value: 'Adam Schumpert'},
    {  name: 'Adrián Prado', value: 'Adrián Prado'},
    {  name: 'Agni Interactive', value: 'Agni Interactive'},
    {  name: 'Alan Lee', value: 'Alan Lee'},
    {  name: 'Aleksander Karcz', value: 'Aleksander Karcz'},
    {  name: 'Aleksander Karez', value: 'Aleksander Karez'},
    {  name: 'Aleksandra Wojtas', value: 'Aleksandra Wojtas'},
    {  name: 'Alex Boca', value: 'Alex Boca'},
    {  name: 'Alexander Gustafson', value: 'Alexander Gustafson'},
    {  name: 'Alexander Kozachenko', value: 'Alexander Kozachenko'},
    {  name: 'Alexandr Elichev', value: 'Alexandr Elichev'},
    {  name: 'Alexandr Shaldin', value: 'Alexandr Shaldin'},
    {  name: 'Alexandre Dainche', value: 'Alexandre Dainche'},
    {  name: 'Alexandru Sabo', value: 'Alexandru Sabo'},
    {  name: 'Allen Douglas', value: 'Allen Douglas'},
    {  name: 'Allison Theus', value: 'Allison Theus'},
    {  name: 'Álvaro Calvo Escudero', value: 'Álvaro Calvo Escudero'},
    {  name: 'Alyn Spiller', value: 'Alyn Spiller'},
    {  name: 'Anato Finnstark', value: 'Anato Finnstark'},
    {  name: 'Anders Finer', value: 'Anders Finer'},
    {  name: 'Andrea Piparo', value: 'Andrea Piparo'},
    {  name: 'Andreas Zafiratos', value: 'Andreas Zafiratos'},
    {  name: 'Andreia Ugrai', value: 'Andreia Ugrai'},
    {  name: 'Andrew Johanson', value: 'Andrew Johanson'},
    {  name: 'Andrew Ryan', value: 'Andrew Ryan'},
    {  name: 'Andrew Silver', value: 'Andrew Silver'},
    {  name: 'Angela Sung', value: 'Angela Sung'},
    {  name: 'Angus McBride', value: 'Angus McBride'},
    {  name: 'Anna Christenson', value: 'Anna Christenson'},
    {  name: 'Anna Mohrbacher', value: 'Anna Mohrbacher'},
    {  name: 'Anna Steinbauer', value: 'Anna Steinbauer'},
    {  name: 'Anne-Louise P.', value: 'Anne-Louise P.'},
    {  name: 'Anthony Devine', value: 'Anthony Devine'},
    {  name: 'Anthony Palumbo', value: 'Anthony Palumbo'},
    {  name: 'Antonio José Manzanedo', value: 'Antonio José Manzanedo'},
    {  name: 'Arden Beckwith', value: 'Arden Beckwith'},
    {  name: 'Aurelien Hubert', value: 'Aurelien Hubert'},
    {  name: 'Ben Zweifel', value: 'Ben Zweifel'},
    {  name: 'Beth Sobel', value: 'Beth Sobel'},
    {  name: 'Bethesda Softworks', value: 'Bethesda Softworks'},
    {  name: 'Blake Henriksen', value: 'Blake Henriksen'},
    {  name: 'Borja Pindado', value: 'Borja Pindado'},
    {  name: 'Brendan C. Murphy', value: 'Brendan C. Murphy'},
    {  name: 'Brian Valenzuela', value: 'Brian Valenzuela'},
    {  name: 'Brothers Hildebrandt', value: 'Brothers Hildebrandt'},
    {  name: 'Carlos Palma Cruchaga', value: 'Carlos Palma Cruchaga'},
    {  name: 'Carly Janine Mazur', value: 'Carly Janine Mazur'},
    {  name: 'Carmen Cianelli', value: 'Carmen Cianelli'},
    {  name: 'Carmen Cianelti', value: 'Carmen Cianelti'},
    {  name: 'Carolina Eade', value: 'Carolina Eade'},
    {  name: 'Cassandre Bolan', value: 'Cassandre Bolan'},
    {  name: 'Charles Urbach', value: 'Charles Urbach'},
    {  name: 'Charmaine Zoe', value: 'Charmaine Zoe'},
    {  name: 'Chris Grun', value: 'Chris Grun'},
    {  name: 'Chris Metcalf', value: 'Chris Metcalf'},
    {  name: 'Chris Rahn', value: 'Chris Rahn'},
    {  name: 'Chris Stanford', value: 'Chris Stanford'},
    {  name: 'Christina Davis', value: 'Christina Davis'},
    {  name: 'Christine Bian', value: 'Christine Bian'},
    {  name: 'Christine Griffin', value: 'Christine Griffin'},
    {  name: 'Claudio Pozas', value: 'Claudio Pozas'},
    {  name: 'Colin Boyer', value: 'Colin Boyer'},
    {  name: 'Craig Maher', value: 'Craig Maher'},
    {  name: 'Cris Griffin', value: 'Cris Griffin'},
    {  name: 'Cristi Balanescu', value: 'Cristi Balanescu'},
    {  name: 'Cristina Vela', value: 'Cristina Vela'},
    {  name: 'Cubicle 7', value: 'Cubicle 7'},
    {  name: 'Cynthia Sheppard', value: 'Cynthia Sheppard'},
    {  name: 'Daarken', value: 'Daarken'},
    {  name: 'Damian Audino', value: 'Damian Audino'},
    {  name: 'Dan Masso', value: 'Dan Masso'},
    {  name: 'Dan Pilla', value: 'Dan Pilla'},
    {  name: 'Dan Scott', value: 'Dan Scott'},
    {  name: 'Dani Hartel', value: 'Dani Hartel'},
    {  name: 'Daniel Eskridge', value: 'Daniel Eskridge'},
    {  name: 'Daniel Zrom', value: 'Daniel Zrom'},
    {  name: 'Darek Zabrocki', value: 'Darek Zabrocki'},
    {  name: 'David A. Nash', value: 'David A. Nash'},
    {  name: 'David Demaret', value: 'David Demaret'},
    {  name: 'David Gaillet', value: 'David Gaillet'},
    {  name: 'David Horne', value: 'David Horne'},
    {  name: 'David Keen', value: 'David Keen'},
    {  name: 'David Kegg', value: 'David Kegg'},
    {  name: 'David Lecossu', value: 'David Lecossu'},
    {  name: 'David T. Wenzel', value: 'David T. Wenzel'},
    {  name: 'David Vargo', value: 'David Vargo'},
    {  name: 'Davis Engel', value: 'Davis Engel'},
    {  name: 'Derek D. Edgell', value: 'Derek D. Edgell'},
    {  name: 'Detlef Ott', value: 'Detlef Ott'},
    {  name: 'Diego Gisbert Llorens', value: 'Diego Gisbert Llorens'},
    {  name: 'Dimitri Bielak', value: 'Dimitri Bielak'},
    {  name: 'Dinodrawing', value: 'Dinodrawing'},
    {  name: 'Dleoblack', value: 'Dleoblack'},
    {  name: 'Dmitry Burmak', value: 'Dmitry Burmak'},
    {  name: 'Dmitry Prosvirnin', value: 'Dmitry Prosvirnin'},
    {  name: 'Donato Giancola', value: 'Donato Giancola'},
    {  name: 'Drazenka Kimpel', value: 'Drazenka Kimpel'},
    {  name: 'Drew Whitmore', value: 'Drew Whitmore'},
    {  name: 'e-laureanar', value: 'e-laureanar'},
    {  name: 'Echo Chernik', value: 'Echo Chernik'},
    {  name: 'Ed Mattinian', value: 'Ed Mattinian'},
    {  name: 'Edward Beard Jr.', value: 'Edward Beard Jr.'},
    {  name: 'Ekaterina Burmak', value: 'Ekaterina Burmak'},
    {  name: 'Emile Denis', value: 'Emile Denis'},
    {  name: 'Emilio Rodriguez', value: 'Emilio Rodriguez'},
    {  name: 'Empty Room Studios', value: 'Empty Room Studios'},
    {  name: 'Emrah Elmasli', value: 'Emrah Elmasli'},
    {  name: 'Epic Games', value: 'Epic Games'},
    {  name: 'Erfian Asafat', value: 'Erfian Asafat'},
    {  name: 'Eric Braddock', value: 'Eric Braddock'},
    {  name: 'Eva Maria Toker', value: 'Eva Maria Toker'},
    {  name: 'Even Mehl Amundsen', value: 'Even Mehl Amundsen'},
    {  name: 'Federico Musetti', value: 'Federico Musetti'},
    {  name: 'Felicia Cano', value: 'Felicia Cano'},
    {  name: 'Florian Stitz', value: 'Florian Stitz'},
    {  name: 'Francesco Amadio', value: 'Francesco Amadio'},
    {  name: 'Franco Rivolli', value: 'Franco Rivolli'},
    {  name: 'Frank Walls', value: 'Frank Walls'},
    {  name: 'Fredrik Dahl Tyskerud', value: 'Fredrik Dahl Tyskerud'},
    {  name: 'Gabriel Verdon', value: 'Gabriel Verdon'},
    {  name: 'Gabriela Birchal', value: 'Gabriela Birchal'},
    {  name: 'Gabrielle Portal', value: 'Gabrielle Portal'},
    {  name: 'Gal Or', value: 'Gal Or'},
    {  name: 'Garret DeChellis', value: 'Garret DeChellis'},
    {  name: 'Glen Osterberger', value: 'Glen Osterberger'},
    {  name: 'Greg Bobrowski', value: 'Greg Bobrowski'},
    {  name: 'Greg Opalinski', value: 'Greg Opalinski'},
    {  name: 'Guillaume Ducos', value: 'Guillaume Ducos'},
    {  name: 'Gus Hunter', value: 'Gus Hunter'},
    {  name: 'Henning Ludvigsen', value: 'Henning Ludvigsen'},
    {  name: 'Howard Lyon', value: 'Howard Lyon'},
    {  name: 'Igor Artyomenko', value: 'Igor Artyomenko'},
    {  name: 'Igor Kieryluk', value: 'Igor Kieryluk'},
    {  name: 'Ijur', value: 'Ijur'},
    {  name: 'Ilich Henriquez', value: 'Ilich Henriquez'},
    {  name: 'Ilya Nazarov', value: 'Ilya Nazarov'},
    {  name: 'Imad Awan', value: 'Imad Awan'},
    {  name: 'Incantata', value: 'Incantata'},
    {  name: 'Ivan Dixon', value: 'Ivan Dixon'},
    {  name: 'Jake Murray', value: 'Jake Murray'},
    {  name: 'Jan Pospíšil', value: 'Jan Pospíšil'},
    {  name: 'Jarreau Wimberly', value: 'Jarreau Wimberly'},
    {  name: 'Jason Cheeseman Meyer', value: 'Jason Cheeseman Meyer'},
    {  name: 'Jason Jenicke', value: 'Jason Jenicke'},
    {  name: 'Jason Ward', value: 'Jason Ward'},
    {  name: 'Javier Charro Martinez', value: 'Javier Charro Martinez'},
    {  name: 'JB Casacop', value: 'JB Casacop'},
    {  name: 'Jeff Himmelman', value: 'Jeff Himmelman'},
    {  name: 'Jeff Lee Johnson', value: 'Jeff Lee Johnson'},
    {  name: 'Jen Zee', value: 'Jen Zee'},
    {  name: 'Jenn Tran', value: 'Jenn Tran'},
    {  name: 'Joe Bosco', value: 'Joe Bosco'},
    {  name: 'John Gravato', value: 'John Gravato'},
    {  name: 'John Howe', value: 'John Howe'},
    {  name: 'John Matson', value: 'John Matson'},
    {  name: 'John Pacer', value: 'John Pacer'},
    {  name: 'John Stanko', value: 'John Stanko'},
    {  name: 'Joko Mulyono', value: 'Joko Mulyono'},
    {  name: 'Jon Bosco', value: 'Jon Bosco'},
    {  name: 'Jon Hodgson', value: 'Jon Hodgson'},
    {  name: 'Jordan Saia', value: 'Jordan Saia'},
    {  name: 'Jordy Lakiere', value: 'Jordy Lakiere'},
    {  name: 'Jorge Borrero', value: 'Jorge Borrero'},
    {  name: 'José Derivaldo Júnior', value: 'José Derivaldo Júnior'},
    {  name: 'Jose Vega', value: 'Jose Vega'},
    {  name: 'Joshua Cairós', value: 'Joshua Cairós'},
    {  name: 'Joshua Viers', value: 'Joshua Viers'},
    {  name: 'Juan Carlos Barquet', value: 'Juan Carlos Barquet'},
    {  name: 'Julepe', value: 'Julepe'},
    {  name: 'Julian Bauer', value: 'Julian Bauer'},
    {  name: 'Justin Gerard', value: 'Justin Gerard'},
    {  name: 'K. R. Harris', value: 'K. R. Harris'},
    {  name: 'Kamila Tzutenberg', value: 'Kamila Tzutenberg'},
    {  name: 'Kara Williams', value: 'Kara Williams'},
    {  name: 'Katayanagi', value: 'Katayanagi'},
    {  name: 'Katerina Poliakova', value: 'Katerina Poliakova'},
    {  name: 'Katherine Dinger', value: 'Katherine Dinger'},
    {  name: 'Katy Grierson', value: 'Katy Grierson'},
    {  name: 'Kaya', value: 'Kaya'},
    {  name: 'Ken McCuen', value: 'Ken McCuen'},
    {  name: 'Kevin Zamir Goeke', value: 'Kevin Zamir Goeke'},
    {  name: 'Kieran Yanner', value: 'Kieran Yanner'},
    {  name: 'Kim Sokil', value: 'Kim Sokil'},
    {  name: 'Kim Sokol', value: 'Kim Sokol'},
    {  name: 'Kip Ayers', value: 'Kip Ayers'},
    {  name: 'Kristina Carroll', value: 'Kristina Carroll'},
    {  name: 'Kristina Gehrmann', value: 'Kristina Gehrmann'},
    {  name: 'Lane Brown', value: 'Lane Brown'},
    {  name: 'Leanna Crossan', value: 'Leanna Crossan'},
    {  name: 'Leanna Teneycke', value: 'Leanna Teneycke'},
    {  name: 'Leonardo Borazio', value: 'Leonardo Borazio'},
    {  name: 'Leone Fabio', value: 'Leone Fabio'},
    {  name: 'Lin Bo', value: 'Lin Bo'},
    {  name: 'Lin Hsiang', value: 'Lin Hsiang'},
    {  name: 'Lindsey Messecar', value: 'Lindsey Messecar'},
    {  name: 'Lius Lasahido', value: 'Lius Lasahido'},
    {  name: 'Loren Fetterman', value: 'Loren Fetterman'},
    {  name: 'Lorraine Schleter', value: 'Lorraine Schleter'},
    {  name: 'Louis Green', value: 'Louis Green'},
    {  name: 'Lucas Durham', value: 'Lucas Durham'},
    {  name: 'Lucas Graciano', value: 'Lucas Graciano'},
    {  name: 'Lucas Staniec', value: 'Lucas Staniec'},
    {  name: 'lucife56', value: 'lucife56'},
    {  name: 'Lukasz Jaskolski', value: 'Lukasz Jaskolski'},
    {  name: 'Magali Villeneuve', value: 'Magali Villeneuve'},
    {  name: 'Marcia George-Bogdan', value: 'Marcia George-Bogdan'},
    {  name: 'Margaret Hardy', value: 'Margaret Hardy'},
    {  name: 'Marius Bota', value: 'Marius Bota'},
    {  name: 'Mariusz Gandzel', value: 'Mariusz Gandzel'},
    {  name: 'Mark Behm', value: 'Mark Behm'},
    {  name: 'Mark Bulahao', value: 'Mark Bulahao'},
    {  name: 'Mark Tarrisse', value: 'Mark Tarrisse'},
    {  name: 'Mark Winters', value: 'Mark Winters'},
    {  name: 'Martin de Diego SÃ¡daba', value: 'Martin de Diego SÃ¡daba'},
    {  name: 'Martin de Diego Sádaba', value: 'Martin de Diego Sádaba'},
    {  name: 'Martin Diego Sadaba', value: 'Martin Diego Sadaba'},
    {  name: 'Matt Smith', value: 'Matt Smith'},
    {  name: 'Matt Stawicki', value: 'Matt Stawicki'},
    {  name: 'Matt Stewart', value: 'Matt Stewart'},
    {  name: 'Matthew Cowdery', value: 'Matthew Cowdery'},
    {  name: 'Matthew Starbuck', value: 'Matthew Starbuck'},
    {  name: 'Melanie Maier', value: 'Melanie Maier'},
    {  name: 'Melanie Stanford', value: 'Melanie Stanford'},
    {  name: 'Melissa Findley', value: 'Melissa Findley'},
    {  name: 'Micah Epstein', value: 'Micah Epstein'},
    {  name: 'Michael Komarck', value: 'Michael Komarck'},
    {  name: 'Michael Rasmussen', value: 'Michael Rasmussen'},
    {  name: 'Michael Whelan', value: 'Michael Whelan'},
    {  name: 'Michele Frigo', value: 'Michele Frigo'},
    {  name: 'Mike Capprotti', value: 'Mike Capprotti'},
    {  name: 'Mike Nash', value: 'Mike Nash'},
    {  name: 'Mila Pesic', value: 'Mila Pesic'},
    {  name: 'Milek Jakubiec', value: 'Milek Jakubiec'},
    {  name: 'Monztre', value: 'Monztre'},
    {  name: 'Mysilvergreen', value: 'Mysilvergreen'},
    {  name: 'Nacho Molina', value: 'Nacho Molina'},
    {  name: 'Nathália Gomes', value: 'Nathália Gomes'},
    {  name: 'Nicholas Gregory', value: 'Nicholas Gregory'},
    {  name: 'Nikolas Hagialas', value: 'Nikolas Hagialas'},
    {  name: 'Nino Vecia', value: 'Nino Vecia'},
    {  name: 'Nora Brisotti', value: 'Nora Brisotti'},
    {  name: 'Oleg Saakyan', value: 'Oleg Saakyan'},
    {  name: 'Oscar Perez', value: 'Oscar Perez'},
    {  name: 'Oscar Römer', value: 'Oscar Römer'},
    {  name: 'Owen William Weber', value: 'Owen William Weber'},
    {  name: 'Paul Guzenko', value: 'Paul Guzenko'},
    {  name: 'Paul Lasaine', value: 'Paul Lasaine'},
    {  name: 'Paul Scott Canavan', value: 'Paul Scott Canavan'},
    {  name: 'Paulo Puggioni', value: 'Paulo Puggioni'},
    {  name: 'Peter Polach', value: 'Peter Polach'},
    {  name: 'Piya Wannachaiwong', value: 'Piya Wannachaiwong'},
    {  name: 'Preston Stone', value: 'Preston Stone'},
    {  name: 'Rafał Hrynkiewicz', value: 'Rafał Hrynkiewicz'},
    {  name: 'Raymond Bonilla', value: 'Raymond Bonilla'},
    {  name: 'Rick Price', value: 'Rick Price'},
    {  name: 'Rio Sabda', value: 'Rio Sabda'},
    {  name: 'Rob Joseph', value: 'Rob Joseph'},
    {  name: 'Romana Kendelic', value: 'Romana Kendelic'},
    {  name: 'Rovina Cai', value: 'Rovina Cai'},
    {  name: 'Ryan Barger', value: 'Ryan Barger'},
    {  name: 'Ryan Valle', value: 'Ryan Valle'},
    {  name: 'S. C. Watson', value: 'S. C. Watson'},
    {  name: 'Sabin Boykinov', value: 'Sabin Boykinov'},
    {  name: 'Sacha Diener', value: 'Sacha Diener'},
    {  name: 'Salvador Trakal', value: 'Salvador Trakal'},
    {  name: 'Sam Lamont', value: 'Sam Lamont'},
    {  name: 'Sam White', value: 'Sam White'},
    {  name: 'Sandara Tang', value: 'Sandara Tang'},
    {  name: 'Sara Betsy', value: 'Sara Betsy'},
    {  name: 'Sara Biddle', value: 'Sara Biddle'},
    {  name: 'Sara K. Diesel', value: 'Sara K. Diesel'},
    {  name: 'Sara Winters', value: 'Sara Winters'},
    {  name: 'Sarel Theron', value: 'Sarel Theron'},
    {  name: 'Sasha Jones', value: 'Sasha Jones'},
    {  name: 'Sebastian Giacobino', value: 'Sebastian Giacobino'},
    {  name: 'Sebastian Zakrzewski', value: 'Sebastian Zakrzewski'},
    {  name: 'Sergey Glushakov', value: 'Sergey Glushakov'},
    {  name: 'Simone De Salvatore', value: 'Simone De Salvatore'},
    {  name: 'Smirtouille', value: 'Smirtouille'},
    {  name: 'Snowblind Studios', value: 'Snowblind Studios'},
    {  name: 'Soul Core', value: 'Soul Core'},
    {  name: 'Stacey Diana Clark', value: 'Stacey Diana Clark'},
    {  name: 'Stanislav Dikolenko', value: 'Stanislav Dikolenko'},
    {  name: 'Stas Dikolenko', value: 'Stas Dikolenko'},
    {  name: 'steamey', value: 'steamey'},
    {  name: 'Stephanie M. Brown', value: 'Stephanie M. Brown'},
    {  name: 'Steven Shan', value: 'Steven Shan'},
    {  name: 'Stu Barnes', value: 'Stu Barnes'},
    {  name: 'Suzanne Helmigh', value: 'Suzanne Helmigh'},
    {  name: 'Tamires Para', value: 'Tamires Para'},
    {  name: 'Taufiq', value: 'Taufiq'},
    {  name: 'Tawny Fritzinger', value: 'Tawny Fritzinger'},
    {  name: 'Taylor Ingvarsson', value: 'Taylor Ingvarsson'},
    {  name: 'Ted Nasmith', value: 'Ted Nasmith'},
    {  name: 'Tim Löchner', value: 'Tim Löchner'},
    {  name: 'Titus Lunter', value: 'Titus Lunter'},
    {  name: 'Tiziano Baracchi', value: 'Tiziano Baracchi'},
    {  name: 'Tom Garden', value: 'Tom Garden'},
    {  name: 'Tom Romain', value: 'Tom Romain'},
    {  name: 'Tomasz Jedruszek', value: 'Tomasz Jedruszek'},
    {  name: 'Toni Justamante Jacobs', value: 'Toni Justamante Jacobs'},
    {  name: 'Tony Foti', value: 'Tony Foti'},
    {  name: 'Torbj”rn K„llstr”m', value: 'Torbj”rn K„llstr”m'},
    {  name: 'Torbjörn Källström', value: 'Torbjörn Källström'},
    {  name: 'Tristan Denecke', value: 'Tristan Denecke'},
    {  name: 'Tropa Entertainment', value: 'Tropa Entertainment'},
    {  name: 'Trudi Castle', value: 'Trudi Castle'},
    {  name: 'Tyler Edlin', value: 'Tyler Edlin'},
    {  name: 'Unknown', value: 'Unknown'},
    {  name: 'Unknown Artist', value: 'Unknown Artist'},
    {  name: 'Uriah Voth', value: 'Uriah Voth'},
    {  name: 'Uwe Jarling', value: 'Uwe Jarling'},
    {  name: 'Victor Maury', value: 'Victor Maury'},
    {  name: 'Vilius Petrauskas', value: 'Vilius Petrauskas'},
    {  name: 'Vincent Van Gogh', value: 'Vincent Van Gogh'},
    {  name: 'Vladimir Rikowski', value: 'Vladimir Rikowski'},
    {  name: 'Winona Nelson', value: 'Winona Nelson'},
    {  name: 'Wouter Florusse', value: 'Wouter Florusse'},
    {  name: 'Yang Zhao', value: 'Yang Zhao'},
    {  name: 'yangzheyy', value: 'yangzheyy'},
    {  name: 'Yoann Boissonnet', value: 'Yoann Boissonnet'}
  ];

  classActive: boolean;

  constructor( private fb: FormBuilder ) {

    this.formBu = this.fb.group({
      name: new FormControl(),
      text: new FormControl(),
      flavor: new FormControl(),
      sphere_code: this.fb.array(['tactics','spirit','leadership','lore','neutral','baggins','fellowship']),
      illustrator: new FormControl(),
      cycle: new FormControl(),
      pack_code: new FormControl(),
      type_code: new FormControl(),
      traits: new FormControl(),
      is_unique: new FormControl(),
      has_errata: new FormControl(),
      ocost: new FormControl(),
      cost: new FormControl(),
      othreat: new FormControl(),
      threat: new FormControl(),
      owillpower: new FormControl(),
      willpower: new FormControl(),
      oattack: new FormControl(),
      attack: new FormControl(),
      odefense: new FormControl(),
      defense: new FormControl(),
      ohealth: new FormControl(),
      health: new FormControl(),

    });
    this.classActive = true;

    this.formBu.controls['ocost'].setValue('==', {onlySelf: true});
    this.formBu.controls['othreat'].setValue('==', {onlySelf: true});
    this.formBu.controls['owillpower'].setValue('==', {onlySelf: true});
    this.formBu.controls['oattack'].setValue('==', {onlySelf: true});
    this.formBu.controls['odefense'].setValue('==', {onlySelf: true});
    this.formBu.controls['ohealth'].setValue('==', {onlySelf: true});

    this.formBu.controls['cycle'].setValue('', {onlySelf: true});
    this.formBu.controls['pack_code'].setValue('', {onlySelf: true});
    this.formBu.controls['type_code'].setValue('', {onlySelf: true});
    this.formBu.controls['traits'].setValue('', {onlySelf: true});

    this.formBu.controls['is_unique'].setValue('', {onlySelf: true});
    this.formBu.controls['has_errata'].setValue('', {onlySelf: true});

    this.formBu.controls['illustrator'].setValue('', {onlySelf: true});

  }

  ngOnInit(): void {
  }

  buscar(){
    this.onSubmit.emit( this.formBu );
  }

  onCheckboxChange(e:any) {
    //console.log(e.target.title);
    //como el data-bs-toggle parece tener conflicto con los eventos change y click del propio checkbox. Apañamos y preparamos el array de otra forma mirando la clase active
    
    const checkArray: FormArray = this.formBu.get('sphere_code') as FormArray;
    
    //if (e.target.checked) {
    if (e.target.parentNode.className.indexOf('active') > -1){
      checkArray.push(new FormControl(e.target.title));
      
    } else {
      let i: number = 0;
      checkArray.controls.forEach((item: any) => {
        if (item.value == e.target.title) {
          checkArray.removeAt(i);
          return;
        }
        i++;
      });
    }
  }

}
